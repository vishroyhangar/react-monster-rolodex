{"version":3,"sources":["Components/Card.jsx","Components/CardList.jsx","Components/SearchBar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","image","title","email","className","src","alt","CardList","monsters","map","monster","id","name","SearchBar","search","type","placeholder","onChange","App","searchChange","e","setState","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAuBeA,EArBF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAEzB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKC,IAAKJ,EAAOK,IAAKL,MAG1B,sBAAKG,UAAU,oBAAf,UACI,6BACKF,IAGL,4BACKC,WCANI,EAXE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACI,qBAAKJ,UAAU,YAAf,SACKI,EAASC,KAAI,SAAAC,GACV,OAAQ,cAAC,EAAD,CAAuBT,MAAK,+BAA0BS,EAAQC,GAAlC,aAAiDT,MAAOQ,EAAQE,KAAMT,MAAOO,EAAQP,OAAtGO,EAAQC,UCE5BE,G,MARG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OACI,qBAAKV,UAAU,aAAf,SACI,uBAAOW,KAAK,SAASC,YAAY,uBAAuBC,SAAUH,QCwC/DI,E,kDAzCb,aAAe,IAAD,8BACZ,gBASFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACP,OAAQM,EAAEE,OAAOC,SARhC,EAAKC,MAAQ,CACXhB,SAAU,GACVM,OAAQ,IALE,E,qDAed,WAAqB,IAAD,OAElBW,MADY,8CAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEb,SAAUqB,S,oBAI7C,WACE,MAA6BC,KAAKN,MAA1BhB,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OACZiB,EAAmBvB,EAASwB,QAAO,SAAAtB,GACvC,OAAOA,EAAQE,KAAKqB,cAAcC,SAASpB,EAAOmB,kBAGpD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDAEA,cAAC,EAAD,CAAWU,OAAQgB,KAAKX,eAExB,cAAC,EAAD,CAAUX,SAAUuB,W,GApCVI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7435c77.chunk.js","sourcesContent":["import '../Sass/Card.scss';\r\n\r\nconst Card = ({image, title, email}) => {\r\n    \r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card__image\">\r\n                <img src={image} alt={image} />\r\n            </div>\r\n\r\n            <div className=\"card__description\">\r\n                <h3>\r\n                    {title}\r\n                </h3>\r\n\r\n                <p>\r\n                    {email}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport '../Sass/CardList.scss';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ monsters }) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n            {monsters.map(monster => {\r\n                return (<Card key={monster.id} image={`https://robohash.org/${monster.id}?set=set2`} title={monster.name} email={monster.email} />)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport '../Sass/SearchBar.scss';\r\n\r\nconst SearchBar = ({ search }) => {\r\n    return (\r\n        <div className=\"search-bar\">\r\n            <input type='search' placeholder=\"Search monsters here\" onChange={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\nimport CardList from '../src/Components/CardList';\nimport SearchBar from '../src/Components/SearchBar';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      search: ''\n    }\n  }\n\n\n  searchChange = (e) => {\n    this.setState({search: e.target.value});\n  }\n\n\n  componentDidMount() {\n    const url = 'https://jsonplaceholder.typicode.com/users';\n    fetch(url)\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n\n  render() {\n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(search.toLowerCase());\n    })\n    \n    return (\n      <div className=\"App\">\n        <h1>MONSTER ROLODEX</h1>\n\n        <SearchBar search={this.searchChange}/>\n\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}